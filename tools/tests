#!/bin/bash -e

SCRIPTPATH=`cd $(dirname "$0") && pwd`
if [ ! -d $SCRIPTPATH ]; then
    echo "Could not determine absolute dir of $0"
    echo "Maybe accessed with symlink"
fi
export SCRIPTPATH

# Run install script to deploy new hooks
$SCRIPTPATH/install_hooks.sh

. "${SCRIPTPATH}/../.local.config"
. "${SCRIPTPATH}/script_include.sh"

if [ -d "$1" ]; then
    BUILD_DIR=$1
    echo "Using non-default build dir $BUILD_DIR"
fi

export BUILD_DIR
export R_HOME
export ROOT_DIR

STATUS=$(mktemp /tmp/r-test-status.XXXXXX)
touch $STATUS
export STATUS

PARENT=$$
export PARENT

function run_test {
  test=$0

  R="${R_HOME}/bin/R"
  
  if test "$(uname)" = "Darwin"; then
      LIB="dyn.load('${BUILD_DIR}/librir.dylib')"
  else
      LIB="dyn.load('${BUILD_DIR}/librir.so')"
  fi
  
  name=`basename $test`
  
  function status {
    done=`wc -l < $STATUS`
    echo -ne "\e[0K\r[${done}/${NUM_TESTS}] ${name} "
  }
  status
  
  TEST=$(mktemp /tmp/r-test.XXXXXX)
  echo ${LIB} > $TEST
  echo "sys.source('${ROOT_DIR}/rir/R/rir.R')" >> $TEST
  grep -v 'require("rir")' ${test} | grep -v 'require(rir)'  >> $TEST
  
  $R --no-init-file -f $TEST &> /dev/null
  res=$?

  ps -p $PARENT &> /dev/null
  if [ $? -ne 0 ]; then
      rm $TEST
      exit
  fi

  if [ $res -ne 0 ]; then
      echo -e "\nfailed test $name:\n   $R -f $TEST"
      exit 255
  fi
  rm $TEST
  echo $name >> $STATUS

  status
}
export -f run_test

TESTS_PATH="${ROOT_DIR}/rir/tests"

NUM_TESTS=`find ${TESTS_PATH} -name '*.R' | wc -l`
export NUM_TESTS

find ${TESTS_PATH} -name '*.R' | xargs -n 1 -P `ncores` bash -c 'run_test $@'

rm -rf $STATUS
echo ""
