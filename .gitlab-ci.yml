stages:
  - Build image
  - Run tests
  - Deploy

docker build:
  stage: Build image
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  before_script:
    - docker info
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - docker build -t registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA .
    - docker push registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA

sanity:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  stage: Run tests
  script:
    - cd /opt/rir
    - tools/cppcheck
    - cd build/release
    - bin/tests

tests_release:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  stage: Run tests
  script:
    - cd /opt/rir/build/release
    - bin/gnur-make-tests test-all-devel
    - ../../tools/check-gnur-make-tests-error
    - bin/gnur-make-tests check-recommended
    - ../../tools/check-gnur-make-tests-error

tests_fullverifier:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  stage: Run tests
  script:
    - cd /opt/rir/build/fullverifier
    - bin/tests
    - bin/gnur-make-tests check
    - PIR_WARMUP=4 ./bin/gnur-make-tests check
    - PIR_ENABLE=force ./bin/gnur-make-tests check

tests_debug:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  stage: Run tests
  script:
    - cd /opt/rir/build/debugopt
    - export UNSOUND_OPTS=off
    - bin/tests
    - R_ENABLE_JIT=0 ./bin/tests
    - R_ENABLE_JIT=1 ./bin/tests
    - R_ENABLE_JIT=2 ./bin/tests
    - R_ENABLE_JIT=3 ./bin/tests
    - PIR_ENABLE=off ./bin/tests
    - PIR_ENABLE=force ./bin/tests
    - for i in `seq 1 5`; do PIR_DEOPT_CHAOS_SEED=$i PIR_DEOPT_CHAOS=1 ./bin/tests ; done
    - ./bin/gnur-make-tests check-devel
    - ../../tools/check-gnur-make-tests-error

test_sanitize:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  stage: Run tests
  script:
    - cd /opt/rir/build/sanitize
    - ENABLE_VALGRIND=1 ./bin/tests
    - R_GCTORTURE=100 bin/tests
    - R_GCTORTURE=1000 ./bin/gnur-make-tests check

test_big_inline:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  stage: Run tests
  script:
    - cd /opt/rir/build/release
    - PIR_INLINER_MAX_INLINEE_SIZE=2000 ./bin/tests
    - PIR_INLINER_MAX_INLINEE_SIZE=1000 ./bin/gnur-make-tests check
    - for i in `seq 1 3`; do PIR_INLINER_MAX_INLINEE_SIZE=2000 PIR_DEOPT_CHAOS_SEED=$i PIR_DEOPT_CHAOS=1 ./bin/tests ; done

test_flaky:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  stage: Run tests
  retry: 2
  script:
    - cd /opt/rir/build/release
    - PIR_DEOPT_CHAOS=1 PIR_INLINER_MAX_INLINEE_SIZE=800 bin/gnur-make-tests check
    - PIR_WARMUP=2 PIR_DEOPT_CHAOS=1 ./bin/gnur-make-tests check

test_benchmarks:
  image: registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  stage: Run tests
  script:
    - cd /opt/rir
    - git clone --depth 1 https://github.com/charig/ReBench.git -b envVarsSupport && cd ReBench
    - pip install --user .
    - export PATH=$HOME/.local/bin:$PATH
    - cd ..
    - cd build/release
    - git clone --depth 1 https://github.com/reactorlabs/rbenchmarking
    - cd rbenchmarking
    - ./Setup/run.sh rebench.conf .. ../../../external/custom-r Benchmarks e:RIR e:PIR -r -SN -wu 0 --iterations 2
    - PIR_DEOPT_CHAOS=1 ./Setup/run.sh rebench.conf .. ../../../external/custom-r Benchmarks e:RIR e:PIR -r -SN -wu 0 --iterations 2


deploy:
  stage: Deploy
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - docker pull registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
    - docker tag registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA registry.gitlab.com/rirvm/rir_mirror:master
    - docker push registry.gitlab.com/rirvm/rir_mirror:master
  only:
    - master
