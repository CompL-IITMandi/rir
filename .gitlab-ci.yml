stages:
  - Build container
  - Build benchmark container
  # - Run tests
  - Deploy
  - Cleanup
  - BitcodeTest
  # - PrepareBitcodes
  # - BenchmarkPeak
  # - BenchmarkWarmup
  - Report

cache:
  paths:
  - apt-cache/

variables:
  REBENCH_OPTIONS_BC: "-df $CI_PROJECT_DIR/benchmarksBC.data -R"
  REBENCH_OPTIONS: "-df $CI_PROJECT_DIR/benchmarks.data -R"
  REBENCH_RUN: "/opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks /opt/rir/build/release"

rir_container:
  stage: Build container
  image: registry.gitlab.com/rirvm/rir_mirror/dockerhub_mirror/docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: registry.gitlab.com/rirvm/rir_mirror/dockerhub_mirror/docker:19.03.0-dind
      alias: docker
  before_script:
    - docker info
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - docker build --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA -t registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA .
    - docker push registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
  tags:
    - dockerInDocker
  retry: 1

benchmark_container:
  stage: Build benchmark container
  needs:
    - rir_container
  image: registry.gitlab.com/rirvm/rir_mirror/dockerhub_mirror/docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: registry.gitlab.com/rirvm/rir_mirror/dockerhub_mirror/docker:19.03.0-dind
      alias: docker
  before_script:
    - docker info
  tags:
    - dockerInDocker
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - cd container/benchmark
    - docker build --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA -t registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA .
    - docker push registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
  retry: 1

# # Test the benchmarks container before deploying
# test_benchmarks:
#   image: registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
#   variables:
#     GIT_STRATEGY: none
#   stage: Run tests
#   needs:
#     - benchmark_container
#   script:
#     - "sed -i 's/warmup: 5/warmup: 0/' /opt/rbenchmarking/rebench.conf"
#     - PIR_DEOPT_CHAOS=100000 PATH=~/.local/bin:$PATH /opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks /opt/rir/build/release/ /opt/rir/external/custom-r "e:PIR-LLVM -R -r --iterations 2"
#     - PATH=~/.local/bin:$PATH /opt/rbenchmarking/Setup/run.sh /opt/rbenchmarking/rebench.conf /opt/rbenchmarking/Benchmarks /opt/rir/build/release/ /opt/rir/external/custom-r "e:PIR-LLVM -R -r --iterations 3"

deploy:
  stage: Deploy
  except:
    - schedules
  image: registry.gitlab.com/rirvm/rir_mirror/dockerhub_mirror/docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: registry.gitlab.com/rirvm/rir_mirror/dockerhub_mirror/docker:19.03.0-dind
      alias: docker
  before_script:
    - docker info
  variables:
    GIT_STRATEGY: none
  script:
    - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_BUILD_USER" --password-stdin registry.gitlab.com
    - docker pull registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA
    - docker tag registry.gitlab.com/rirvm/rir_mirror:$CI_COMMIT_SHA registry.gitlab.com/rirvm/rir_mirror:master
    - docker push registry.gitlab.com/rirvm/rir_mirror:master
    - docker pull registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
    - docker tag registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA registry.gitlab.com/rirvm/rir_mirror/benchmark:master
    - docker push registry.gitlab.com/rirvm/rir_mirror/benchmark:master
  tags:
    - dockerInDocker
  only:
    - master

cleanup_registry:
  stage: Cleanup
  image: ruby:2.5
  before_script: []
  script:
    - echo -n "$CI_BUILD_TOKEN" | ruby container/cleanup.rb

report_results:
  stage: Report
  image: ruby:2.5
  before_script: []
  script:
    - ruby tools/report_ci_results.rb

# bitcode_test:
#   image: registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
#   stage: BitcodeTest
#   variables:
#     GIT_STRATEGY: none
#   script:
#     - cp /opt/rir/harnesses/AWFharness.r /opt/rbenchmarking/Benchmarks/areWeFast/harness.r
#     - cp /opt/rir/harnesses/RTharness.r /opt/rbenchmarking/Benchmarks/RealThing/harness.r
#     - cp /opt/rir/harnesses/Sharness.r /opt/rbenchmarking/Benchmarks/simple/harness.r
#     - cp /opt/rir/harnesses/SOharness.r /opt/rbenchmarking/Benchmarks/shootout/harness.r
#     - cp /opt/rir/harnesses/sim_rebench.conf /opt/rbenchmarking/rebench.conf
#     - cp -r /opt/rir/harnesses/bitcodes /opt/bitcodes
#     # - ls /opt/bitcodes
#     - NORMAL_RUN=1 $REBENCH_RUN "e:PIR-LLVM $REBENCH_OPTIONS"
#     - DESERIALIZER_RUN=1 $REBENCH_RUN "e:PIR-LLVM $REBENCH_OPTIONS_BC"
#     - echo "Run Done"
#   tags:
#     - benchmarks
#   artifacts:
#     paths:
#     - benchmarksBC.data
#     - benchmarks.data
#     expire_in: 24 month
#   retry: 1

rmarkdown_test:
  image: registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
  stage: BitcodeTest
  variables:
    GIT_STRATEGY: none
  script:
    - apt install libssl-dev libxml2-dev pandoc
    - cd /opt/rir/harnesses/
    - mkdir /opt/bitcodes
    - echo "-> Installing packages"
    - SKIP_CONTEXTUAL_COMPILATION=1 /opt/rir/build/release/bin/Rscript installDeps.R
    - echo "-> Serializing bitcodes"
    - PIR_SERIALIZE_ALL=1 PIR_SERIALIZE_PREFIX="/opt/bitcodes" /opt/rir/build/release/bin/Rscript runner.R
    - echo "-> Running with bitcodes (JIT CC)"
    - EARLY_BITCODES=1 PIR_DESERIALIZE_PREFIX="/opt/bitcodes" /opt/rir/build/release/bin/Rscript runner.R
    - echo "-> Running without bitcodes (JIT CC)"
    - NORMAL_RUN=1 /opt/rir/build/release/bin/Rscript runner.R
    - echo "Run Done"
  tags:
    - benchmarks
  retry: 1

# prepare_bitcodes:
#   image: registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
#   stage: PrepareBitcodes
#   variables:
#     GIT_STRATEGY: none
#   script:
#     - cp /opt/rir/harnesses/AWFharness.r /opt/rbenchmarking/Benchmarks/areWeFast/harness.r
#     - cp /opt/rir/harnesses/RTharness.r /opt/rbenchmarking/Benchmarks/RealThing/harness.r
#     - cp /opt/rir/harnesses/Sharness.r /opt/rbenchmarking/Benchmarks/simple/harness.r
#     - cp /opt/rir/harnesses/SOharness.r /opt/rbenchmarking/Benchmarks/shootout/harness.r
#     - mkdir /opt/bitcodes
#     - SERIALIZER_RUN=1 $REBENCH_RUN "e:PIR-LLVM $REBENCH_OPTIONS_BC"
#     - ls /opt
#     - ls /opt/bitcodes/bytecodes
#     - echo "serializer run done"
#   retry: 1

# benchmark_peak:
#   image: registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
#   stage: BenchmarkPeak
#   # needs:
#   #   - prepare_bitcodes
#   variables:
#     GIT_STRATEGY: none
#   script:
#     - cp -r /opt/rir/harnesses/bitcodes /opt/bitcodes
#     - cp /opt/rir/harnesses/rebench.conf /opt/rbenchmarking/rebench.conf
#     - echo "With bitcodes"
#     - $REBENCH_RUN "e:PIR-LLVM $REBENCH_OPTIONS_PBC"
#     # - rm -rf /opt/bitcodes
#     # - echo "Without bitcodes"
#     # - $REBENCH_RUN "e:PIR-LLVM $REBENCH_OPTIONS_P"
#     # - echo "benchmark peak done"
#     # - echo "benchmark warmups"
#     # - cp /opt/rir/harnesses/rebench.conf /opt/rbenchmarking/rebench.conf
#     # - echo "With bitcodes"
#     # - DESERIALIZER_RUN=1 $REBENCH_RUN "e:PIR-LLVM $REBENCH_OPTIONS_WBC"
#     # - echo "Without bitcodes"
#     # - $REBENCH_RUN "e:PIR-LLVM $REBENCH_OPTIONS_W"
#     # - echo "benchmark warmup done"

#   artifacts:
#     paths:
#     - benchmarksPeakBC.data
#     # - benchmarksPeak.data
#     expire_in: 24 month
#   retry: 1

# benchmark_warmup:
#   image: registry.gitlab.com/rirvm/rir_mirror/benchmark:$CI_COMMIT_SHA
#   stage: BenchmarkWarmup
#   needs:
#     - benchmark_peak
#   variables:
#     GIT_STRATEGY: none
#   script:
#     - cp /opt/rir/harnesses/rebench.conf /opt/rbenchmarking/rebench.conf
#     - echo "With bitcodes"
#     - DESERIALIZER_RUN=1 $REBENCH_RUN "e:PIR-LLVM $REBENCH_OPTIONS_WBC"
#     - echo "Without bitcodes"
#     - $REBENCH_RUN "e:PIR-LLVM $REBENCH_OPTIONS_W"
#     - echo "benchmark warmup done"
#   artifacts:
#     paths:
#     - benchmarksWarmupkBC.data
#     - benchmarksWarmup.data
#     expire_in: 24 month
#   retry: 1
